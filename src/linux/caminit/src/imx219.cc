#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/ioctl.h>
#include <unistd.h>
#include <linux/i2c-dev.h>
#include "caminit.h"
#include "camcfg.h"

static config_t cfg_imx219_init_1920_1080_30[] =
{
	{0x0100, 0x00},
	{0x0103, 0x01},
	{0x30EB, 0x05},
	{0x30EB, 0x0C},
	{0x300A, 0xFF},
	{0x300B, 0xFF},
	{0x30EB, 0x05},
	{0x30EB, 0x09},
	//{0x0114, 0x03},
	{0x0114, 0x01},  // CSI_LANE_MODE changed from 3 to 1
	{0x0128, 0x00},
	{0x012A, 0x18},
	{0x012B, 0x00},
	{0x0160, ((0x48e >> 8) & 0xFF)},
	{0x0161, (0x48e & 0xFF)},
	{0x0162, ((0xD78 >> 8) & 0xFF)},
	{0x0163, (0xD78 & 0xFF)},
	{0x0164, 0x02},
	{0x0165, 0xA8},
	{0x0166, 0x0A},
	{0x0167, 0x27},
	{0x0168, 0x02},
	{0x0169, 0xB4},
	{0x016A, 0x06},
	{0x016B, 0xEB},
	{0x016C, 0x07},
	{0x016D, 0x80},
	{0x016E, 0x04},
	{0x016F, 0x38},
	{0x0170, 0x01},
	{0x0171, 0x01},

	{0x0172, 0x03},  // added to correct color

	{0x0174, 0x00},
	{0x0175, 0x00},
	{0x018C, 0x0A},
	{0x018D, 0x0A},
	//{0x0301, 0x05},
	{0x0301, 0x0A},  // VTPXCK_DIV changed from 0x05 to 0x0A
	{0x0303, 0x01},
	{0x0304, 0x03},
	{0x0305, 0x03},
	{0x0306, 0x00},
	{0x0307, 0x57}, //0x51
	{0x0309, 0x0A},
	{0x030B, 0x01},
	{0x030C, 0x00},
	{0x030D, 0x5A}, //0x54
	{0x455E, 0x00},
	{0x471E, 0x4B},
	{0x4767, 0x0F},
	{0x4750, 0x14},
	{0x4540, 0x00},
	{0x47B4, 0x14},
	{0x4713, 0x30},
	{0x478B, 0x10},
	{0x478F, 0x10},
	{0x4793, 0x10},
	{0x4797, 0x0E},
	{0x479B, 0x0E},
	{0x0100, 0x01}
};

static config_t cfg_imx219_init_1280_720_30[] =
{
	{0x0100, 0x00},
	/* software reset */
	{0x0103, 0x01},
	/* global settings */
	{0x30EB, 0x05},
	{0x30EB, 0x0C},
	{0x300A, 0xFF},
	{0x300B, 0xFF},
	{0x30EB, 0x05},
	{0x30EB, 0x09},
	//{0x0114, 0x03},
	{0x0114, 0x01},  // CSI_LANE_MODE changed from 3 to 1
	{0x0128, 0x00},
	{0x012A, 0x18},
	{0x012B, 0x00},
	/* Bank A Settings */
	{0x0160, 0x02},
	{0x0161, 0x8C},
	{0x0162, 0x0D},
	{0x0163, 0xE8},
	{0x0164, 0x01},
	{0x0165, 0x68},
	{0x0166, 0x0B},
	{0x0167, 0x67},
	{0x0168, 0x02},
	{0x0169, 0x00},
	{0x016A, 0x07},
	{0x016B, 0x9F},
	{0x016C, 0x05},
	{0x016D, 0x00},
	{0x016E, 0x02},
	{0x016F, 0xD0},
	{0x0170, 0x01},
	{0x0171, 0x01},

	{0x0172, 0x03},  // added to correct color

	{0x0174, 0x03},
	{0x0175, 0x03},
	{0x018C, 0x0A},
	{0x018D, 0x0A},
	/* clock setting */
	//{0x0301, 0x05},
	{0x0301, 0x0A},  // VTPXCK_DIV changed from 0x05 to 0x0A
	{0x0303, 0x01},
	{0x0304, 0x03},
	{0x0305, 0x03},
	{0x0306, 0x00},
	{0x0307, 0x57},
	{0x0309, 0x0A},
	{0x030B, 0x01},
	{0x030C, 0x00},
	{0x030D, 0x5A},
	{0x455E, 0x00},
	{0x471E, 0x4B},
	{0x4767, 0x0F},
	{0x4750, 0x14},
	{0x4540, 0x00},
	{0x47B4, 0x14},
	{0x4713, 0x30},
	{0x478B, 0x10},
	{0x478F, 0x10},
	{0x4793, 0x10},
	{0x4797, 0x0E},
	{0x479B, 0x0E},
	/* stream on */
	{0x0100, 0x01}
};

static config_t cfg_imx219_init_640_480_30[] =
{
	{0x0100, 0x00},
	{0x0103, 0x01},
	{0x30EB, 0x05},
	{0x30EB, 0x0C},
	{0x300A, 0xFF},
	{0x300B, 0xFF},
	{0x30EB, 0x05},
	{0x30EB, 0x09},
	//{0x0114, 0x03},
	{0x0114, 0x01},  // CSI_LANE_MODE changed from 3 to 1
	{0x0128, 0x00},
	{0x012A, 0x18},
	{0x012B, 0x00},
	{0x0160, 0x0A},
	{0x0161, 0x2F},
	{0x0162, 0x0D},
	{0x0163, 0xE8},
	{0x0164, 0x03},
	{0x0165, 0xE8},
	/* X_ADD_END_A */
	{0x0166, 0x0D},
	{0x0167, 0xE7},
	/* Y_ADD_STA_A and Y_ADD_END_A */
	{0x0168, 0x01},
	{0x0169, 0xF0},
	{0x016A, 0x09},
	{0x016B, 0x6F},
	/* x_output_size and y_output_size */
	{0x016C, 0x02},
	{0x016D, 0x80},
	{0x016E, 0x01},
	{0x016F, 0xE0},
	{0x0170, 0x01},
	{0x0171, 0x01},

	{0x0172, 0x03},  // added to correct color

	{0x0174, 0x02},  /* binning mode x4 */
	{0x0175, 0x02},
	{0x018C, 0x0A},
	{0x018D, 0x0A},

	{0x0301, 0x05},
	//{0x0301, 0x0A},  // VTPXCK_DIV changed from 0x05 to 0x0A
	{0x0303, 0x01},
	{0x0304, 0x02},
	{0x0305, 0x02},
	{0x0306, 0x00},
	{0x0307, 0x57}, //0x51
	{0x0309, 0x0A},
	{0x030B, 0x01},
	{0x030C, 0x00},
	{0x030D, 0x5A}, //0x54
	{0x455E, 0x00},
	{0x471E, 0x4B},
	{0x4767, 0x0F},
	{0x4750, 0x14},
	{0x4540, 0x00},
	{0x47B4, 0x14},
	{0x4713, 0x30},
	{0x478B, 0x10},
	{0x478F, 0x10},
	{0x4793, 0x10},
	{0x4797, 0x0E},
	{0x479B, 0x0E},
	{0x0100, 0x01}
};

int init_imx219(e_resolution resolution)
{
	int fd = open("/dev/i2c-3", O_RDWR);
	unsigned short addr = 0x00;
	unsigned char dat0 = 0x5a, dat1 = 0xa5;

	if (fd < 0) {
		perror("open(/dev/i2c-3)");
		return -1;
	}
	ioctl(fd, I2C_SLAVE, (0x21 >> 1));

	write(fd, &addr, 2);
	read(fd, &dat0, 1);
	addr = 0x0100;
	write(fd, &addr, 2);
	read(fd, &dat1, 1);

	printf("ID = 0x%x, 0x%x\n", dat0, dat1);

	/* go to SW standby and wait EOF to pass through */
	write_reg(fd, 0x0100, 0x00);
	usleep(500*1000);

	config_t *cfg;
	int num_cmds;
	switch (resolution) {
	case RESOLUTION_640_480:
	case RESOLUTION_320_240:
	case RESOLUTION_320_200:
		cfg = cfg_imx219_init_640_480_30;
		num_cmds = sizeof(cfg_imx219_init_640_480_30) / sizeof(cfg_imx219_init_640_480_30[0]);
		break;
	case RESOLUTION_1280_720:
	case RESOLUTION_640_360:
		cfg = cfg_imx219_init_1280_720_30;
		num_cmds = sizeof(cfg_imx219_init_1280_720_30) / sizeof(cfg_imx219_init_1280_720_30[0]);
		break;
	case RESOLUTION_1920_1080:
	case RESOLUTION_960_540:
		cfg = cfg_imx219_init_1920_1080_30;
		num_cmds = sizeof(cfg_imx219_init_1920_1080_30) / sizeof(cfg_imx219_init_1920_1080_30[0]);
		break;
	default:
		break;
	}

	for (int i = 0; i < num_cmds; i++) {
		write_reg(fd, cfg[i].addr, cfg[i].val);
	}

	int gain = 4;
	addr = 0x157;
	dat0 = 256 - 256 / gain;
	write_reg(fd, addr, dat0);

	close(fd);

	return 0;
}
