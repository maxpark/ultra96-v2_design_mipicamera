-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity demosaic_root is
generic (
    C_S_AXI_BUS_AXI4LS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_BUS_AXI4LS_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_BUS_AXI4LS_AWVALID : IN STD_LOGIC;
    s_axi_BUS_AXI4LS_AWREADY : OUT STD_LOGIC;
    s_axi_BUS_AXI4LS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_AXI4LS_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_AXI4LS_WVALID : IN STD_LOGIC;
    s_axi_BUS_AXI4LS_WREADY : OUT STD_LOGIC;
    s_axi_BUS_AXI4LS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_AXI4LS_DATA_WIDTH-1 downto 0);
    s_axi_BUS_AXI4LS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_AXI4LS_DATA_WIDTH/8-1 downto 0);
    s_axi_BUS_AXI4LS_ARVALID : IN STD_LOGIC;
    s_axi_BUS_AXI4LS_ARREADY : OUT STD_LOGIC;
    s_axi_BUS_AXI4LS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_AXI4LS_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_AXI4LS_RVALID : OUT STD_LOGIC;
    s_axi_BUS_AXI4LS_RREADY : IN STD_LOGIC;
    s_axi_BUS_AXI4LS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_BUS_AXI4LS_DATA_WIDTH-1 downto 0);
    s_axi_BUS_AXI4LS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_BUS_AXI4LS_BVALID : OUT STD_LOGIC;
    s_axi_BUS_AXI4LS_BREADY : IN STD_LOGIC;
    s_axi_BUS_AXI4LS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    p_idata_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
    p_idata_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_idata_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_odata_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    p_odata_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_odata_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_idata_TVALID : IN STD_LOGIC;
    p_idata_TREADY : OUT STD_LOGIC;
    p_odata_TVALID : OUT STD_LOGIC;
    p_odata_TREADY : IN STD_LOGIC );
end;


architecture behav of demosaic_root is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "demosaic_root,hls_ip_2018_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=6.660000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.822000,HLS_SYN_LAT=384011,HLS_SYN_TPT=307372,HLS_SYN_MEM=7,HLS_SYN_DSP=0,HLS_SYN_FF=3565,HLS_SYN_LUT=8014,HLS_VERSION=2018_2_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal Loop_1_proc66_U0_ap_start : STD_LOGIC;
    signal Loop_1_proc66_U0_start_full_n : STD_LOGIC;
    signal Loop_1_proc66_U0_ap_done : STD_LOGIC;
    signal Loop_1_proc66_U0_ap_continue : STD_LOGIC;
    signal Loop_1_proc66_U0_ap_idle : STD_LOGIC;
    signal Loop_1_proc66_U0_ap_ready : STD_LOGIC;
    signal Loop_1_proc66_U0_start_out : STD_LOGIC;
    signal Loop_1_proc66_U0_start_write : STD_LOGIC;
    signal Loop_1_proc66_U0_p_idata_TREADY : STD_LOGIC;
    signal Loop_1_proc66_U0_p_idata_V_bv_V_din : STD_LOGIC_VECTOR (39 downto 0);
    signal Loop_1_proc66_U0_p_idata_V_bv_V_write : STD_LOGIC;
    signal Loop_1_proc66_U0_p_iuser_V_bv_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc66_U0_p_iuser_V_bv_V_write : STD_LOGIC;
    signal Loop_1_proc66_U0_p_ilast_V_bv_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc66_U0_p_ilast_V_bv_V_write : STD_LOGIC;
    signal odata_U0_ap_start : STD_LOGIC;
    signal odata_U0_ap_done : STD_LOGIC;
    signal odata_U0_ap_continue : STD_LOGIC;
    signal odata_U0_ap_idle : STD_LOGIC;
    signal odata_U0_ap_ready : STD_LOGIC;
    signal odata_U0_start_out : STD_LOGIC;
    signal odata_U0_start_write : STD_LOGIC;
    signal odata_U0_p_idata_V_bv_V_read : STD_LOGIC;
    signal odata_U0_p_odata_V_bv_V_din : STD_LOGIC_VECTOR (23 downto 0);
    signal odata_U0_p_odata_V_bv_V_write : STD_LOGIC;
    signal olast_U0_ap_start : STD_LOGIC;
    signal olast_U0_ap_done : STD_LOGIC;
    signal olast_U0_ap_continue : STD_LOGIC;
    signal olast_U0_ap_idle : STD_LOGIC;
    signal olast_U0_ap_ready : STD_LOGIC;
    signal olast_U0_p_ilast_V_bv_V_read : STD_LOGIC;
    signal olast_U0_p_olast_V_bv_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal olast_U0_p_olast_V_bv_V_write : STD_LOGIC;
    signal ouser_U0_ap_start : STD_LOGIC;
    signal ouser_U0_ap_done : STD_LOGIC;
    signal ouser_U0_ap_continue : STD_LOGIC;
    signal ouser_U0_ap_idle : STD_LOGIC;
    signal ouser_U0_ap_ready : STD_LOGIC;
    signal ouser_U0_p_iuser_V_bv_V_read : STD_LOGIC;
    signal ouser_U0_p_ouser_V_bv_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal ouser_U0_p_ouser_V_bv_V_write : STD_LOGIC;
    signal Loop_2_proc67_U0_ap_start : STD_LOGIC;
    signal Loop_2_proc67_U0_ap_done : STD_LOGIC;
    signal Loop_2_proc67_U0_ap_continue : STD_LOGIC;
    signal Loop_2_proc67_U0_ap_idle : STD_LOGIC;
    signal Loop_2_proc67_U0_ap_ready : STD_LOGIC;
    signal Loop_2_proc67_U0_p_odata_V_bv_V_read : STD_LOGIC;
    signal Loop_2_proc67_U0_p_ouser_V_bv_V_read : STD_LOGIC;
    signal Loop_2_proc67_U0_p_olast_V_bv_V_read : STD_LOGIC;
    signal Loop_2_proc67_U0_p_odata_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal Loop_2_proc67_U0_p_odata_TVALID : STD_LOGIC;
    signal Loop_2_proc67_U0_p_odata_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_2_proc67_U0_p_odata_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal p_idata_V_bv_V_full_n : STD_LOGIC;
    signal p_idata_V_bv_V_dout : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_V_bv_V_empty_n : STD_LOGIC;
    signal p_iuser_V_bv_V_full_n : STD_LOGIC;
    signal p_iuser_V_bv_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_iuser_V_bv_V_empty_n : STD_LOGIC;
    signal p_ilast_V_bv_V_full_n : STD_LOGIC;
    signal p_ilast_V_bv_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_ilast_V_bv_V_empty_n : STD_LOGIC;
    signal p_odata_V_bv_V_full_n : STD_LOGIC;
    signal p_odata_V_bv_V_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal p_odata_V_bv_V_empty_n : STD_LOGIC;
    signal p_olast_V_bv_V_full_n : STD_LOGIC;
    signal p_olast_V_bv_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_olast_V_bv_V_empty_n : STD_LOGIC;
    signal p_ouser_V_bv_V_full_n : STD_LOGIC;
    signal p_ouser_V_bv_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_ouser_V_bv_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_odata_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_odata_U0_full_n : STD_LOGIC;
    signal start_for_odata_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_odata_U0_empty_n : STD_LOGIC;
    signal start_for_olast_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_olast_U0_full_n : STD_LOGIC;
    signal start_for_olast_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_olast_U0_empty_n : STD_LOGIC;
    signal start_for_ouser_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ouser_U0_full_n : STD_LOGIC;
    signal start_for_ouser_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ouser_U0_empty_n : STD_LOGIC;
    signal start_for_Loop_2_proc67_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_2_proc67_U0_full_n : STD_LOGIC;
    signal start_for_Loop_2_proc67_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_2_proc67_U0_empty_n : STD_LOGIC;
    signal olast_U0_start_full_n : STD_LOGIC;
    signal olast_U0_start_write : STD_LOGIC;
    signal ouser_U0_start_full_n : STD_LOGIC;
    signal ouser_U0_start_write : STD_LOGIC;
    signal Loop_2_proc67_U0_start_full_n : STD_LOGIC;
    signal Loop_2_proc67_U0_start_write : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component Loop_1_proc66 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_idata_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
        p_idata_TVALID : IN STD_LOGIC;
        p_idata_TREADY : OUT STD_LOGIC;
        p_idata_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_idata_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_idata_V_bv_V_din : OUT STD_LOGIC_VECTOR (39 downto 0);
        p_idata_V_bv_V_full_n : IN STD_LOGIC;
        p_idata_V_bv_V_write : OUT STD_LOGIC;
        p_iuser_V_bv_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_iuser_V_bv_V_full_n : IN STD_LOGIC;
        p_iuser_V_bv_V_write : OUT STD_LOGIC;
        p_ilast_V_bv_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_ilast_V_bv_V_full_n : IN STD_LOGIC;
        p_ilast_V_bv_V_write : OUT STD_LOGIC );
    end component;


    component odata IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_idata_V_bv_V_dout : IN STD_LOGIC_VECTOR (39 downto 0);
        p_idata_V_bv_V_empty_n : IN STD_LOGIC;
        p_idata_V_bv_V_read : OUT STD_LOGIC;
        p_odata_V_bv_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        p_odata_V_bv_V_full_n : IN STD_LOGIC;
        p_odata_V_bv_V_write : OUT STD_LOGIC );
    end component;


    component olast IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_ilast_V_bv_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_ilast_V_bv_V_empty_n : IN STD_LOGIC;
        p_ilast_V_bv_V_read : OUT STD_LOGIC;
        p_olast_V_bv_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_olast_V_bv_V_full_n : IN STD_LOGIC;
        p_olast_V_bv_V_write : OUT STD_LOGIC );
    end component;


    component ouser IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_iuser_V_bv_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_iuser_V_bv_V_empty_n : IN STD_LOGIC;
        p_iuser_V_bv_V_read : OUT STD_LOGIC;
        p_ouser_V_bv_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_ouser_V_bv_V_full_n : IN STD_LOGIC;
        p_ouser_V_bv_V_write : OUT STD_LOGIC );
    end component;


    component Loop_2_proc67 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_odata_V_bv_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        p_odata_V_bv_V_empty_n : IN STD_LOGIC;
        p_odata_V_bv_V_read : OUT STD_LOGIC;
        p_ouser_V_bv_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_ouser_V_bv_V_empty_n : IN STD_LOGIC;
        p_ouser_V_bv_V_read : OUT STD_LOGIC;
        p_olast_V_bv_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_olast_V_bv_V_empty_n : IN STD_LOGIC;
        p_olast_V_bv_V_read : OUT STD_LOGIC;
        p_odata_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        p_odata_TVALID : OUT STD_LOGIC;
        p_odata_TREADY : IN STD_LOGIC;
        p_odata_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_odata_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w40_d16_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (39 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (39 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d320_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w24_d16_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d16_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_odata_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_olast_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_ouser_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_2_dEe IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component demosaic_root_BUS_AXI4LS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    demosaic_root_BUS_AXI4LS_s_axi_U : component demosaic_root_BUS_AXI4LS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_BUS_AXI4LS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_BUS_AXI4LS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_BUS_AXI4LS_AWVALID,
        AWREADY => s_axi_BUS_AXI4LS_AWREADY,
        AWADDR => s_axi_BUS_AXI4LS_AWADDR,
        WVALID => s_axi_BUS_AXI4LS_WVALID,
        WREADY => s_axi_BUS_AXI4LS_WREADY,
        WDATA => s_axi_BUS_AXI4LS_WDATA,
        WSTRB => s_axi_BUS_AXI4LS_WSTRB,
        ARVALID => s_axi_BUS_AXI4LS_ARVALID,
        ARREADY => s_axi_BUS_AXI4LS_ARREADY,
        ARADDR => s_axi_BUS_AXI4LS_ARADDR,
        RVALID => s_axi_BUS_AXI4LS_RVALID,
        RREADY => s_axi_BUS_AXI4LS_RREADY,
        RDATA => s_axi_BUS_AXI4LS_RDATA,
        RRESP => s_axi_BUS_AXI4LS_RRESP,
        BVALID => s_axi_BUS_AXI4LS_BVALID,
        BREADY => s_axi_BUS_AXI4LS_BREADY,
        BRESP => s_axi_BUS_AXI4LS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_const_lv32_0);

    Loop_1_proc66_U0 : component Loop_1_proc66
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_1_proc66_U0_ap_start,
        start_full_n => Loop_1_proc66_U0_start_full_n,
        ap_done => Loop_1_proc66_U0_ap_done,
        ap_continue => Loop_1_proc66_U0_ap_continue,
        ap_idle => Loop_1_proc66_U0_ap_idle,
        ap_ready => Loop_1_proc66_U0_ap_ready,
        start_out => Loop_1_proc66_U0_start_out,
        start_write => Loop_1_proc66_U0_start_write,
        p_idata_TDATA => p_idata_TDATA,
        p_idata_TVALID => p_idata_TVALID,
        p_idata_TREADY => Loop_1_proc66_U0_p_idata_TREADY,
        p_idata_TUSER => p_idata_TUSER,
        p_idata_TLAST => p_idata_TLAST,
        p_idata_V_bv_V_din => Loop_1_proc66_U0_p_idata_V_bv_V_din,
        p_idata_V_bv_V_full_n => p_idata_V_bv_V_full_n,
        p_idata_V_bv_V_write => Loop_1_proc66_U0_p_idata_V_bv_V_write,
        p_iuser_V_bv_V_din => Loop_1_proc66_U0_p_iuser_V_bv_V_din,
        p_iuser_V_bv_V_full_n => p_iuser_V_bv_V_full_n,
        p_iuser_V_bv_V_write => Loop_1_proc66_U0_p_iuser_V_bv_V_write,
        p_ilast_V_bv_V_din => Loop_1_proc66_U0_p_ilast_V_bv_V_din,
        p_ilast_V_bv_V_full_n => p_ilast_V_bv_V_full_n,
        p_ilast_V_bv_V_write => Loop_1_proc66_U0_p_ilast_V_bv_V_write);

    odata_U0 : component odata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => odata_U0_ap_start,
        start_full_n => start_for_Loop_2_proc67_U0_full_n,
        ap_done => odata_U0_ap_done,
        ap_continue => odata_U0_ap_continue,
        ap_idle => odata_U0_ap_idle,
        ap_ready => odata_U0_ap_ready,
        start_out => odata_U0_start_out,
        start_write => odata_U0_start_write,
        p_idata_V_bv_V_dout => p_idata_V_bv_V_dout,
        p_idata_V_bv_V_empty_n => p_idata_V_bv_V_empty_n,
        p_idata_V_bv_V_read => odata_U0_p_idata_V_bv_V_read,
        p_odata_V_bv_V_din => odata_U0_p_odata_V_bv_V_din,
        p_odata_V_bv_V_full_n => p_odata_V_bv_V_full_n,
        p_odata_V_bv_V_write => odata_U0_p_odata_V_bv_V_write);

    olast_U0 : component olast
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => olast_U0_ap_start,
        ap_done => olast_U0_ap_done,
        ap_continue => olast_U0_ap_continue,
        ap_idle => olast_U0_ap_idle,
        ap_ready => olast_U0_ap_ready,
        p_ilast_V_bv_V_dout => p_ilast_V_bv_V_dout,
        p_ilast_V_bv_V_empty_n => p_ilast_V_bv_V_empty_n,
        p_ilast_V_bv_V_read => olast_U0_p_ilast_V_bv_V_read,
        p_olast_V_bv_V_din => olast_U0_p_olast_V_bv_V_din,
        p_olast_V_bv_V_full_n => p_olast_V_bv_V_full_n,
        p_olast_V_bv_V_write => olast_U0_p_olast_V_bv_V_write);

    ouser_U0 : component ouser
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ouser_U0_ap_start,
        ap_done => ouser_U0_ap_done,
        ap_continue => ouser_U0_ap_continue,
        ap_idle => ouser_U0_ap_idle,
        ap_ready => ouser_U0_ap_ready,
        p_iuser_V_bv_V_dout => p_iuser_V_bv_V_dout,
        p_iuser_V_bv_V_empty_n => p_iuser_V_bv_V_empty_n,
        p_iuser_V_bv_V_read => ouser_U0_p_iuser_V_bv_V_read,
        p_ouser_V_bv_V_din => ouser_U0_p_ouser_V_bv_V_din,
        p_ouser_V_bv_V_full_n => p_ouser_V_bv_V_full_n,
        p_ouser_V_bv_V_write => ouser_U0_p_ouser_V_bv_V_write);

    Loop_2_proc67_U0 : component Loop_2_proc67
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_2_proc67_U0_ap_start,
        ap_done => Loop_2_proc67_U0_ap_done,
        ap_continue => Loop_2_proc67_U0_ap_continue,
        ap_idle => Loop_2_proc67_U0_ap_idle,
        ap_ready => Loop_2_proc67_U0_ap_ready,
        p_odata_V_bv_V_dout => p_odata_V_bv_V_dout,
        p_odata_V_bv_V_empty_n => p_odata_V_bv_V_empty_n,
        p_odata_V_bv_V_read => Loop_2_proc67_U0_p_odata_V_bv_V_read,
        p_ouser_V_bv_V_dout => p_ouser_V_bv_V_dout,
        p_ouser_V_bv_V_empty_n => p_ouser_V_bv_V_empty_n,
        p_ouser_V_bv_V_read => Loop_2_proc67_U0_p_ouser_V_bv_V_read,
        p_olast_V_bv_V_dout => p_olast_V_bv_V_dout,
        p_olast_V_bv_V_empty_n => p_olast_V_bv_V_empty_n,
        p_olast_V_bv_V_read => Loop_2_proc67_U0_p_olast_V_bv_V_read,
        p_odata_TDATA => Loop_2_proc67_U0_p_odata_TDATA,
        p_odata_TVALID => Loop_2_proc67_U0_p_odata_TVALID,
        p_odata_TREADY => p_odata_TREADY,
        p_odata_TUSER => Loop_2_proc67_U0_p_odata_TUSER,
        p_odata_TLAST => Loop_2_proc67_U0_p_odata_TLAST);

    p_idata_V_bv_V_U : component fifo_w40_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_1_proc66_U0_p_idata_V_bv_V_din,
        if_full_n => p_idata_V_bv_V_full_n,
        if_write => Loop_1_proc66_U0_p_idata_V_bv_V_write,
        if_dout => p_idata_V_bv_V_dout,
        if_empty_n => p_idata_V_bv_V_empty_n,
        if_read => odata_U0_p_idata_V_bv_V_read);

    p_iuser_V_bv_V_U : component fifo_w1_d320_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_1_proc66_U0_p_iuser_V_bv_V_din,
        if_full_n => p_iuser_V_bv_V_full_n,
        if_write => Loop_1_proc66_U0_p_iuser_V_bv_V_write,
        if_dout => p_iuser_V_bv_V_dout,
        if_empty_n => p_iuser_V_bv_V_empty_n,
        if_read => ouser_U0_p_iuser_V_bv_V_read);

    p_ilast_V_bv_V_U : component fifo_w1_d320_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_1_proc66_U0_p_ilast_V_bv_V_din,
        if_full_n => p_ilast_V_bv_V_full_n,
        if_write => Loop_1_proc66_U0_p_ilast_V_bv_V_write,
        if_dout => p_ilast_V_bv_V_dout,
        if_empty_n => p_ilast_V_bv_V_empty_n,
        if_read => olast_U0_p_ilast_V_bv_V_read);

    p_odata_V_bv_V_U : component fifo_w24_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => odata_U0_p_odata_V_bv_V_din,
        if_full_n => p_odata_V_bv_V_full_n,
        if_write => odata_U0_p_odata_V_bv_V_write,
        if_dout => p_odata_V_bv_V_dout,
        if_empty_n => p_odata_V_bv_V_empty_n,
        if_read => Loop_2_proc67_U0_p_odata_V_bv_V_read);

    p_olast_V_bv_V_U : component fifo_w1_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => olast_U0_p_olast_V_bv_V_din,
        if_full_n => p_olast_V_bv_V_full_n,
        if_write => olast_U0_p_olast_V_bv_V_write,
        if_dout => p_olast_V_bv_V_dout,
        if_empty_n => p_olast_V_bv_V_empty_n,
        if_read => Loop_2_proc67_U0_p_olast_V_bv_V_read);

    p_ouser_V_bv_V_U : component fifo_w1_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ouser_U0_p_ouser_V_bv_V_din,
        if_full_n => p_ouser_V_bv_V_full_n,
        if_write => ouser_U0_p_ouser_V_bv_V_write,
        if_dout => p_ouser_V_bv_V_dout,
        if_empty_n => p_ouser_V_bv_V_empty_n,
        if_read => Loop_2_proc67_U0_p_ouser_V_bv_V_read);

    start_for_odata_U0_U : component start_for_odata_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_odata_U0_din,
        if_full_n => start_for_odata_U0_full_n,
        if_write => Loop_1_proc66_U0_start_write,
        if_dout => start_for_odata_U0_dout,
        if_empty_n => start_for_odata_U0_empty_n,
        if_read => odata_U0_ap_ready);

    start_for_olast_U0_U : component start_for_olast_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_olast_U0_din,
        if_full_n => start_for_olast_U0_full_n,
        if_write => Loop_1_proc66_U0_start_write,
        if_dout => start_for_olast_U0_dout,
        if_empty_n => start_for_olast_U0_empty_n,
        if_read => olast_U0_ap_ready);

    start_for_ouser_U0_U : component start_for_ouser_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_ouser_U0_din,
        if_full_n => start_for_ouser_U0_full_n,
        if_write => Loop_1_proc66_U0_start_write,
        if_dout => start_for_ouser_U0_dout,
        if_empty_n => start_for_ouser_U0_empty_n,
        if_read => ouser_U0_ap_ready);

    start_for_Loop_2_dEe_U : component start_for_Loop_2_dEe
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_2_proc67_U0_din,
        if_full_n => start_for_Loop_2_proc67_U0_full_n,
        if_write => odata_U0_start_write,
        if_dout => start_for_Loop_2_proc67_U0_dout,
        if_empty_n => start_for_Loop_2_proc67_U0_empty_n,
        if_read => Loop_2_proc67_U0_ap_ready);




    Loop_1_proc66_U0_ap_continue <= ap_const_logic_1;
    Loop_1_proc66_U0_ap_start <= ap_start;
    Loop_1_proc66_U0_start_full_n <= (start_for_ouser_U0_full_n and start_for_olast_U0_full_n and start_for_odata_U0_full_n);
    Loop_2_proc67_U0_ap_continue <= ap_const_logic_1;
    Loop_2_proc67_U0_ap_start <= start_for_Loop_2_proc67_U0_empty_n;
    Loop_2_proc67_U0_start_full_n <= ap_const_logic_1;
    Loop_2_proc67_U0_start_write <= ap_const_logic_0;
    ap_done <= Loop_2_proc67_U0_ap_done;
    ap_idle <= (ouser_U0_ap_idle and olast_U0_ap_idle and odata_U0_ap_idle and Loop_2_proc67_U0_ap_idle and Loop_1_proc66_U0_ap_idle);
    ap_ready <= Loop_1_proc66_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Loop_2_proc67_U0_ap_done;
    ap_sync_ready <= Loop_1_proc66_U0_ap_ready;
    odata_U0_ap_continue <= ap_const_logic_1;
    odata_U0_ap_start <= start_for_odata_U0_empty_n;
    olast_U0_ap_continue <= ap_const_logic_1;
    olast_U0_ap_start <= start_for_olast_U0_empty_n;
    olast_U0_start_full_n <= ap_const_logic_1;
    olast_U0_start_write <= ap_const_logic_0;
    ouser_U0_ap_continue <= ap_const_logic_1;
    ouser_U0_ap_start <= start_for_ouser_U0_empty_n;
    ouser_U0_start_full_n <= ap_const_logic_1;
    ouser_U0_start_write <= ap_const_logic_0;
    p_idata_TREADY <= Loop_1_proc66_U0_p_idata_TREADY;
    p_odata_TDATA <= Loop_2_proc67_U0_p_odata_TDATA;
    p_odata_TLAST <= Loop_2_proc67_U0_p_odata_TLAST;
    p_odata_TUSER <= Loop_2_proc67_U0_p_odata_TUSER;
    p_odata_TVALID <= Loop_2_proc67_U0_p_odata_TVALID;
    start_for_Loop_2_proc67_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_odata_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_olast_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_ouser_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
